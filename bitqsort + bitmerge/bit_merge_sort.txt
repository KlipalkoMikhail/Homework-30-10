#include "headers.h"
#define N 4

// 112 Клипалко Михаил Михайлович
// функция сортировки слиянием
// получаем в качестве параметров: массив чисел и параметр текущей длины массива
// сортировку будем проводить, начиная с массивов длины 1, затем 2 и так далее до k*N

int bit_merge_sort(int number[], int k)                                             // функция сортировки слиянием
{
    int curr_size;                                                                  // текущая рассматриваемая длина массива
    int left_index;                                                                 // левый указатель в подмассиве длиной curr_size
    for (curr_size = 1; curr_size < k*N; curr_size = curr_size * 2)                 // цикл слияния массивов с длиной от 1 до k*N
    {
        for(left_index = 0; left_index < k*N - 1; left_index += 2*curr_size)
        {
            int mid = min_index(left_index + curr_size - 1 , k*N - 1);              // здесь проверяем: меньше ли значение центрального указателя последнего индекса в массиве? Если да, то центральный элемент берем за конец массива
            int right_end = min_index(left_index + 2*curr_size - 1 , k*N - 1);      // ищем правый указатель
                                                                                    // это устраняет случаи, где остаток от деления длины массива на cursize равен единице или двойке, что равносильно длине массива с соотвественными длинами

            bit_merge_mass(number, left_index, mid, right_end, k);                  // функция слияния двух массивов
        }
    }

    return 0;
}
